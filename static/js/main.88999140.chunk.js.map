{"version":3,"sources":["state/action-type/show.ts","state/reducers/show.ts","state/action-type/todoItem.ts","state/reducers/todoItemReducers.ts","dummyData.ts","state/reducers/index.ts","state/store.ts","state/action-creators/todoItem.ts","state/action-creators/show.ts","components/Form.tsx","components/Footer.tsx","assets/images/icon-check.svg","components/List.tsx","components/Info.tsx","App.tsx","index.tsx"],"names":["ShowActionType","ActionType","showReducer","state","action","type","CHANGE","payload","testData","test","localStorage","getItem","id","text","checked","JSON","parse","todoItemReducer","PLUS","length","REMOVE","data","forEach","item","index","splice","CHECK","reducers","combineReducers","dataTodo","show","store","createStore","applyMiddleware","thunk","plusItem","dispatch","removeItem","checkItem","changeShow","FormStyle","makeStyles","theme","createStyles","root","backgroundColor","boxShadow","width","borderRadius","input","padding","fontWeight","todoItemCheck","background","backgroundRepeat","backgroundPosition","display","height","todoItemEmpty","border","marginRight","Form","styles","useDispatch","bindActionCreators","actionCreators","useState","setText","className","onSubmit","event","preventDefault","Input","value","placeholder","onChange","evt","target","startAdornment","InputAdornment","position","FooferStyle","fontSize","fontFamily","alignItems","justifyContent","flexWrap","flexDirection","boxSizing","fontBold","color","fontLight","letterSpacing","button","cursor","active","Footer","useSelector","actionShow","undefined","onClick","ListStyle","minHeight","marginBottom","borderBottom","alignItem","transition","opacity","flex","empty","emptyIcon","checkIcon","IconCheck","deleteIcon","lineDer","textDecoration","List","map","todoItem","xmlns","fill","fill-rule","d","InfoStyle","textAlign","Info","href","AppStyle","marginTop","todoTitle","paddingBottom","App","useEffect","setItem","stringify","style","Container","maxWidth","Typography","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88999140.chunk.js","sourcesContent":["export enum ShowActionType\r\n{\r\n    CHANGE= 'CHANGE'\r\n}\r\n\r\nexport type showType = \"active\" | \"completed\" | \"all\";\r\n\r\n\r\ntype changeShow = \r\n{\r\n    type: ShowActionType.CHANGE,\r\n    payload: showType\r\n}\r\n\r\nexport type ShowAction = changeShow","import { ShowAction, ShowActionType, showType } from \"../action-type/show\";\r\n\r\n\r\nconst showReducer = (state: showType = \"all\", action: ShowAction) =>\r\n{\r\n    switch (action.type)\r\n    {\r\n        case ShowActionType.CHANGE:\r\n            return action.payload;\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default showReducer;","\r\nexport enum ActionType \r\n{\r\n    PLUS= 'PLUS',\r\n    REMOVE= 'REMOVE',\r\n    CHECK= 'CHECK'\r\n}\r\n\r\n// type each action\r\n\r\ntype plusItem = {\r\n    type: ActionType.PLUS,\r\n    payload: string\r\n}\r\n\r\ntype removeItem = {\r\n    type: ActionType.REMOVE,\r\n    payload: number\r\n}\r\n\r\ntype checkItem = {\r\n    type: ActionType.CHECK,\r\n    payload: number\r\n}\r\n\r\n// type of Action\r\n\r\nexport type Action = plusItem | removeItem | checkItem","import { useEffect } from \"react\";\r\nimport { dummyData, DummyDataType, TodoItemType } from \"../../dummyData\";\r\nimport { Action, ActionType } from \"../action-type/todoItem\";\r\n\r\n// const data = localStorage.getItem('data') ? JSON.parse(localStorage.getItem('data')) : [...dummyData];\r\n\r\n// const data = localStorage.getItem('data') ? JSON.parse(localStorage.getItem('data')) : [...dummyData];\r\n\r\nlet test = localStorage.getItem('data');let testData: DummyDataType;\r\nif (test === null)\r\n{\r\n    testData = [...dummyData];\r\n}\r\nelse\r\n{\r\n    testData = JSON.parse(test);\r\n    // testData = JSON.parse(test);\r\n}\r\n\r\n// useEffect(() => {\r\n//     localStorage.setItem('myTasks', JSON.stringify(items))\r\n//   }, [todoItemReducer])\r\n\r\n\r\nconst todoItemReducer = (state: DummyDataType = testData, action: Action) =>\r\n{\r\n\r\n    switch (action.type)\r\n    {\r\n        case ActionType.PLUS:\r\n            {\r\n                let id = state[state.length - 1].id + 1;\r\n                return [...state, \r\n                    {\r\n                        id: id,\r\n                        text: action.payload,\r\n                        checked: false\r\n                }]\r\n            }\r\n            \r\n\r\n        case ActionType.REMOVE:\r\n            {\r\n                let data = [...state];\r\n                data.forEach(function (item: TodoItemType, index)\r\n                {\r\n                    if (item.id === action.payload)\r\n                    {\r\n                        data.splice(index, 1)\r\n                    }\r\n                })\r\n                return [...data]\r\n            }\r\n\r\n        case ActionType.CHECK:\r\n            {\r\n                let data = [...state];\r\n                data.forEach(function (item: TodoItemType, index)\r\n                {\r\n                    if (item.id === action.payload)\r\n                    {\r\n                        item.checked = ! item.checked;\r\n                    }\r\n                })\r\n                return [...data]\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default todoItemReducer;","export type TodoItemType = {\r\n    id: number,\r\n    text: string,\r\n    checked: boolean\r\n}\r\n\r\nexport type DummyDataType = TodoItemType[];\r\n\r\nexport const dummyData : DummyDataType = [\r\n    {\r\n      id: 1,\r\n      text: \"Learn HTML/CSS\",\r\n      checked: true\r\n    },\r\n    {\r\n      id: 2,\r\n      text: \"10 minutes meditation\",\r\n      checked: false\r\n    },\r\n    {\r\n      id: 3,\r\n      text: \"Read for 1 hour\",\r\n      checked: false\r\n    },\r\n    {\r\n      id: 4,\r\n      text: \"Complete online JavaScript course\",\r\n      checked: true\r\n    },\r\n    {\r\n      id: 5,\r\n      text: \"Pick up groceries\",\r\n      checked: false\r\n    },\r\n    {\r\n      id: 6,\r\n      text: \"Complete Todo App Frontend Mentor\",\r\n      checked: false\r\n    }\r\n]","import { combineReducers } from \"redux\";\r\nimport showReducer from \"./show\";\r\nimport todoItemReducer from \"./todoItemReducers\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n    dataTodo: todoItemReducer,\r\n    show:showReducer\r\n});\r\n\r\n\r\nexport default reducers;\r\n\r\nexport type RootState = ReturnType<typeof reducers>","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\n\r\n// const persistedState = localStorage.getItem('reduxState') \r\n//                 ? JSON.parse(localStorage.getItem('reduxState'))\r\n//                 : {}\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    // persistedState,\r\n    applyMiddleware(thunk)\r\n)\r\n\r\n// store.subscribe(()=>{\r\n//     localStorage.setItem('data', JSON.stringify(store.getState()))\r\n//   })\r\n\r\nexport default store","import { Dispatch } from \"react\"\r\nimport { Action, ActionType } from \"../action-type/todoItem\"\r\n\r\n\r\nexport const plusItem = (text: string) => {\r\n    return (dispatch: Dispatch<Action>) => {\r\n        dispatch({\r\n            type: ActionType.PLUS,\r\n            payload: text,\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeItem = (id: number) => {\r\n    return (dispatch: Dispatch<Action>) => {\r\n        dispatch({\r\n            type: ActionType.REMOVE,\r\n            payload: id,\r\n        })\r\n    }\r\n}\r\n\r\nexport const checkItem = (id: number) => {\r\n    return (dispatch: Dispatch<Action>) => {\r\n        dispatch({\r\n            type: ActionType.CHECK,\r\n            payload: id,\r\n        })\r\n    }\r\n}","import { Dispatch } from \"react\"\r\nimport { ShowAction, ShowActionType, showType } from \"../action-type/show\"\r\n\r\n\r\nexport const changeShow = (show: showType) => {\r\n    return (dispatch: Dispatch<ShowAction>) => {\r\n        dispatch({\r\n            type: ShowActionType.CHANGE,\r\n            payload: show,\r\n        })\r\n    }\r\n}\r\n\r\n","import React, { FormEvent } from 'react'\r\nimport { useState } from 'react'\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actionCreators } from '../state';\r\n\r\nimport { makeStyles, createStyles } from '@material-ui/styles';\r\nimport { Input, InputAdornment, Theme } from '@material-ui/core'\r\n\r\n\r\nconst Form = () => {\r\n\r\n    const styles = FormStyle();\r\n\r\n    const dispatch = useDispatch();\r\n    const { plusItem } = bindActionCreators(actionCreators, dispatch)\r\n\r\n    const [text, setText] = useState('');\r\n\r\n    const onSubmit = (event: FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        // console.log(text);\r\n        plusItem(text);\r\n        setText('');\r\n    }\r\n\r\n    return (\r\n        <form\r\n            className={styles.root}\r\n            onSubmit={onSubmit}\r\n            >\r\n            <Input\r\n                className={styles.input}\r\n                type=\"text\" \r\n                value={text} \r\n                placeholder=\"Create a new todo...\" \r\n                onChange={evt => setText(evt.target.value)} \r\n                startAdornment={\r\n                    <InputAdornment \r\n                        position=\"start\"\r\n                    >\r\n                        <div className={styles.todoItemEmpty}/>\r\n                        {/* <img  src={ IconCheckLogo } alt=\"Icon\" /> */}\r\n                    </InputAdornment>\r\n                }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n//******************* Style ********************/\r\n\r\nconst FormStyle = makeStyles((theme: Theme) => createStyles({\r\n    root:\r\n    {\r\n        backgroundColor: 'white',\r\n        boxShadow: '0px 35px 50px #c2c3d680',\r\n        width: '100%',\r\n        borderRadius: '5px',\r\n    },\r\n    input:\r\n    {\r\n        padding: '20px',\r\n        width: '100%',\r\n        fontWeight: 500,\r\n    },\r\n    todoItemCheck:\r\n    {\r\n        background: 'url(/static/media/icon-check.a8fb15d0.svg), linear-gradient( 135deg, #57ddff, #c058f3)' ,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n        display: 'inline-block',\r\n        borderRadius: '50%',\r\n        height: '24px',\r\n        width: '24px',\r\n    },\r\n    todoItemEmpty:\r\n    {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n        display: 'inline-block',\r\n        borderRadius: '50%',\r\n        height: '22px',\r\n        width: '22px',\r\n        border: '1px solid #e4e5f1',\r\n        background: 'transparent',\r\n        marginRight: '10px'\r\n    }, \r\n    '@media (max-width: 600px)':\r\n    {\r\n        input:\r\n        {\r\n            padding: '17px',\r\n        }\r\n    }\r\n}))\r\n\r\nexport default Form\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../state/reducers';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actionCreators, actionShow } from '../state';\r\nimport { TodoItemType } from '../dummyData';\r\n\r\nimport { makeStyles, createStyles } from '@material-ui/styles';\r\nimport { Theme } from '@material-ui/core'\r\n\r\nconst Footer = () => {\r\n\r\n    const dataTodo = useSelector((state: RootState) => state.dataTodo)\r\n    const show = useSelector((state: RootState) => state.show)\r\n\r\n    const dispatch = useDispatch();\r\n    const { changeShow } = bindActionCreators(actionShow, dispatch)\r\n    const { removeItem } = bindActionCreators(actionCreators, dispatch)\r\n\r\n    const clearCompleted = () =>\r\n    {\r\n        dataTodo.forEach(function (item: TodoItemType)\r\n        {\r\n            if ( item.checked === true )\r\n            {\r\n                removeItem(item.id)\r\n            }\r\n        })\r\n    }\r\n\r\n  const styles = FooferStyle();\r\n\r\n    return (\r\n        <div className={styles.root}> \r\n            <div>\r\n                <p className={styles.fontLight}> {dataTodo.length} Item left</p>\r\n            </div>\r\n            <div className={styles.flexWrap}>\r\n                <p \r\n                    className={`\r\n                        ${styles.fontBold} \r\n                        ${styles.button} \r\n                        ${(show === \"all\") ? styles.active : undefined} \r\n                    `} \r\n                    onClick={ () => changeShow(\"all\")} \r\n                > All </p>\r\n                <p \r\n                    className={`\r\n                        ${styles.fontBold} \r\n                        ${styles.button}\r\n                        ${(show === \"active\") ? styles.active : undefined} \r\n                    `} \r\n                    onClick={ () => changeShow(\"active\")} \r\n                >Active</p>\r\n                <p \r\n                    className={`\r\n                        ${styles.fontBold} \r\n                        ${styles.button}\r\n                        ${(show === \"completed\") ? styles.active : undefined} \r\n                    `} \r\n                    onClick={ () => changeShow(\"completed\")} \r\n                >Completed</p>                \r\n            </div>\r\n            <div>\r\n                <p className={`${styles.fontLight} ${styles.button}`} onClick={ clearCompleted }>Clear Completed</p>                \r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n//******************* Style ********************/\r\n\r\nconst FooferStyle = makeStyles((theme: Theme) => createStyles({\r\n    root:\r\n    {\r\n        padding: '20px',\r\n        fontSize: '14px',\r\n        fontFamily: \"'Josefin Sans', sans-serif\",\r\n        backgroundColor: 'white',\r\n        // boxShadow: '0px 35px 50px #c2c3d680',\r\n        // width: '100%',\r\n        borderRadius: '5px',\r\n        // flex\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n    },\r\n    flexWrap:\r\n    {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        // width: '166px',\r\n        justifyContent: 'space-between',\r\n        boxSizing: 'border-box',\r\n    },\r\n    fontBold:\r\n    {\r\n        fontSize: '14px',\r\n        fontWeight: 'bold',\r\n        // background: 'transparent',\r\n        // border: 'none',\r\n        padding: '10px',\r\n        color: '#777a92',\r\n    },\r\n    fontLight:\r\n    {\r\n        display: 'block',\r\n        // width: '100px',\r\n        fontSize: '14px',\r\n        letterSpacing: '-0.25px',\r\n        color: '#777a92',\r\n    },\r\n    button:\r\n    {\r\n        cursor: 'pointer',\r\n        '&:hover':\r\n        {\r\n            color: '#4d5066',\r\n        }\r\n    },\r\n    active:\r\n    {\r\n        color: '#3a7cfd',\r\n    }\r\n}));\r\n\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/icon-check.a8fb15d0.svg\";","import React from 'react'\r\nimport { TodoItemType } from '../dummyData';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../state/reducers/index';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actionCreators } from '../state';\r\n\r\nimport { makeStyles, createStyles } from '@material-ui/styles';\r\nimport { Theme } from '@material-ui/core'\r\n\r\nimport Footer from './Footer';\r\n\r\nimport IconCheck from '../assets/images/icon-check.svg';\r\n\r\nconst List = () => {\r\n\r\n  const dataTodo = useSelector((state: RootState) => state.dataTodo)\r\n  const show = useSelector((state: RootState) => state.show)\r\n\r\n  const dispatch = useDispatch();\r\n  const { removeItem, checkItem } = bindActionCreators(actionCreators, dispatch)\r\n\r\n  const styles = ListStyle();\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      {\r\n        dataTodo.map((todoItem: TodoItemType) => {\r\n          if (\r\n            show === \"all\" ||\r\n            (show === \"active\" && todoItem.checked === false) ||\r\n            (show === \"completed\" && todoItem.checked === true)\r\n          )\r\n          return (\r\n            <div\r\n              key={todoItem.id}\r\n              className={styles.item}\r\n            >\r\n              <div className={styles.flex}>\r\n                <div\r\n                  onClick={() => checkItem(todoItem.id)}\r\n                >\r\n                  {todoItem.checked ?\r\n                    (\r\n                      <div className={styles.checkIcon}></div>\r\n                    ) :\r\n                    (\r\n                      <div className={styles.emptyIcon}>\r\n                        <div className={styles.empty} />\r\n                      </div>\r\n                    )}\r\n                </div>\r\n\r\n                <p\r\n                  className={todoItem.checked ? styles.lineDer : undefined}\r\n                >{todoItem.text}</p>\r\n              </div>\r\n\r\n              <button\r\n                className={styles.deleteIcon}\r\n                onClick={() => removeItem(todoItem.id)}\r\n              >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\"><path fill=\"#494C6B\" fill-rule=\"evenodd\" d=\"M16.97 0l.708.707L9.546 8.84l8.132 8.132-.707.707-8.132-8.132-8.132 8.132L0 16.97l8.132-8.132L0 .707.707 0 8.84 8.132 16.971 0z\"></path></svg>\r\n              </button>\r\n\r\n            </div>\r\n          )\r\n        else return null;\r\n        }\r\n        )\r\n      }\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\n//******************* Style ********************/\r\n\r\nconst ListStyle = makeStyles((theme: Theme) => createStyles({\r\n  root:\r\n  {\r\n    backgroundColor: 'white',\r\n    boxShadow: '0px 35px 50px #c2c3d680',\r\n    width: '100%',\r\n    borderRadius: '5px',\r\n    minHeight: '300px',\r\n    marginBottom: '150px',\r\n  },\r\n  item:\r\n  {\r\n    padding: '20px',\r\n    fontSize: '18px',\r\n    fontWeight: 500,\r\n    fontFamily: \"'Josefin Sans', sans-serif\",\r\n    color: '#777a92',\r\n    borderBottom: '1px solid #e4e4f1',\r\n    alignItem: 'start !important',\r\n    cursor: 'grab',\r\n    // textAlign: 'start !important',\r\n\r\n    // flex\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n\r\n    '&:hover':\r\n    {\r\n      \"& $deleteIcon\":\r\n      {\r\n        transition: 'opacity 0.5s ease-in-out',\r\n        border: 'none',\r\n        cursor: 'pointer',\r\n        opacity: 1,\r\n      },\r\n      \"& $emptyIcon\":\r\n      {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n        display: 'inline-block',\r\n        borderRadius: '50%',\r\n        height: '25px',\r\n        width: '25px',\r\n        background: 'linear-gradient(135deg, #57ddff, #c058f3)',\r\n        marginRight: '10px',\r\n      },\r\n      \"& $empty\":\r\n      {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n        display: 'inline-block',\r\n        borderRadius: '50%',\r\n        height: '23px',\r\n        width: '23px',\r\n        background: 'white',\r\n        // marginRight: '10px',\r\n      },\r\n    },\r\n  },\r\n  flex:\r\n  {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  empty: {},\r\n  emptyIcon:\r\n  {\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n    display: 'inline-block',\r\n    borderRadius: '50%',\r\n    height: '23px',\r\n    width: '23px',\r\n    background: 'transperent',\r\n    border: '1px solid #e4e5f1',\r\n    marginRight: '10px',\r\n  },\r\n  checkIcon:\r\n  {\r\n    background: `url(${IconCheck}), linear-gradient(135deg,#57ddff,#c058f3)`,\r\n\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: '50%',\r\n    display: 'inline-block',\r\n    borderRadius: '50%',\r\n    height: '25px',\r\n    width: '25px',\r\n    marginRight: '10px',\r\n  },\r\n  deleteIcon:\r\n  {\r\n    background: 'transparent',\r\n    border: 'none',\r\n    opacity: 0,\r\n  },\r\n  lineDer:\r\n  {\r\n    textDecoration: 'line-through',\r\n    color: '#cacde8',\r\n  },\r\n  '@media (max-width: 600px)':\r\n  {\r\n    item:\r\n    {\r\n      padding: '17px',\r\n    }\r\n  }\r\n}))\r\n\r\nexport default List;\r\n","import React from 'react'\r\nimport { makeStyles, createStyles } from '@material-ui/styles';\r\nimport { Theme } from '@material-ui/core'\r\n\r\nconst Info = () => {\r\n    const styles = InfoStyle();\r\n\r\n    return (\r\n        <div className={styles.root}>\r\n            <p >\r\n                Todo App from Hoang Nam. Idea from \r\n                <a href=\"https://frontendmentor-todo-app-react.vercel.app/\"> Frontendmentor </a>\r\n                Sourcode on <a href=\"https://github.com/hoangnamwar/To-do-list\"> github </a>\r\n            </p>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nconst InfoStyle = makeStyles((theme: Theme) => createStyles({\r\n    root:\r\n    {\r\n        width: '100%',\r\n        display: 'block',\r\n        fontSize: '12px',\r\n        letterSpacing: '2.5px',\r\n        // color: '#777a92',\r\n        color: 'white',\r\n        // borderTop: '1px solid #3f51b5',\r\n        // boxShadow: '35px 0px 0px #c2c3d680',\r\n        background: 'linear-gradient(135deg, #c058f3, #57ddff)',\r\n        padding: '10px',\r\n        fontFamily: \"'Josefin Sans', sans-serif\",\r\n        textAlign: 'center',\r\n    }\r\n}))\r\n\r\n\r\nexport default Info;","import React, { useEffect } from 'react';\nimport Form from './components/Form'\nimport List from './components/List'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles, createStyles } from '@material-ui/styles'\nimport { Theme } from '@material-ui/core'\nimport Info from './components/Info';\n\nimport { useSelector } from 'react-redux';\nimport { RootState } from './state/reducers';\n\nfunction App() {\n\n  const dataTodo = useSelector((state: RootState) => state.dataTodo);\n\n  useEffect(() => {\n      localStorage.setItem('data', JSON.stringify(dataTodo))\n    }, [dataTodo])\n\n  const style = AppStyle()\n\n  return (\n    <>\n      <Container className={style.root} maxWidth=\"sm\">\n        <Typography className={style.todoTitle} > TODO </Typography>\n        <Form />\n        <br />\n        {/* <List /> */}\n        <List />\n      </Container>      \n      <Info />\n    </>\n  );\n}\n\n//******************* Style ********************/\nconst AppStyle = makeStyles((theme: Theme) => createStyles({\n  root:\n  {\n    marginTop: '65px',\n  },\n  todoTitle: {\n    color: 'white',\n    letterSpacing: '15px',\n    fontWeight: 700,\n    fontSize: '40px',\n    paddingBottom: '45px',\n    fontFamily: \"'Josefin Sans', sans-serif\",\n  },\n  '@media (max-width: 600px)':\n  {\n    root:\n    {\n      marginTop: '50px',\n    },\n    todoTitle: \n    {\n      paddingBottom: '40px',\n    }\n  }\n\n}))\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { store } from './state';\nimport { Provider } from 'react-redux'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}